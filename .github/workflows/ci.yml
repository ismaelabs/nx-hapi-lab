name: CI

on:
  push:
    branches:
      - master
  pull_request:

permissions:
  actions: read
  contents: read
  id-token: write

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: 📦 Checkout Repository
        with:
          filter: tree:0
          fetch-depth: 0

      - uses: actions/setup-node@v4
        name: 🔨 Setup Node.js
        with:
          node-version: 20
          cache: 'npm'

      - run: npm ci --legacy-peer-deps

      - name: 🔍 Get Affected Applications
        id: affected-apps
        run: |
          AFFECTED_APPS=$(npx nx show projects --affected --type=app --base=origin/master~1 --head=origin/master | grep -vE 'e2e' | sed 's/@nx-hapi-lab\///g' | xargs)
          echo "AFFECTED_APPS=$AFFECTED_APPS" >> $GITHUB_OUTPUT
          echo "Found affected apps:"
          echo "$AFFECTED_APPS"

      - name: 🧪 Run Tests for Affected Apps
        if: steps.affected-apps.outputs.AFFECTED_APPS != ''
        run: npx nx affected --base=origin/master~1 --head=origin/master -t lint test build typecheck --parallel --configuration=ci

      - name: 🚀 Deploy dos apps afetados
        if: steps.affected-apps.outputs.AFFECTED_APPS != ''
        run: |
          for app in ${{ steps.affected-apps.outputs.AFFECTED_APPS }}; do
            echo "🚀 Fazendo deploy do app: $app"
            docker build -f apps/$app/Dockerfile -t $app .
          done